@model IEnumerable<Volkswagen.Models.SpareOrderModels>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>备件订购信息</h2>

<script type="text/javascript">
    var row = 0;
    var fieldMap = new Array(
        "备件物流编号",
        "备件名称",
        "备件型号",
        "订购数量",
        "备件制造商",
        "订货号",
        "所属设备",
        "设备编号",
        "设备商",
        "产品编号",
        "订购人",
        "订购日期",
        "单价金额",
        "总金额",
        "状态",
        "采购形式",
        "编号",
        "最后修改时间",
        "修改人",
        "创建时间",
        "创建人",
        "备注"
    );

    var opMap = new Array(
        "=",
        ">",
        "<",
        ">=",
        "<="
        );

    var valueMap = new Array(
        "SpareID",
        "SpareDes",
        "Type",
        "OrderValue",
        "Producer",
        "OrderNum",
        "Property",
        "EquipmentID",
        "Maker",
        "MakerNum",
        "Orderman",
        "UseTime",
        "UnitPrice",
        "TotalPrice",
        "Status",
        "Mode",
        "OrderID",
        "ChangeTime",
        "Changer",
        "CreateTime",
        "Creator");

    function append_input() {

        var fm = document.getElementById("query_form");
        var f = document.createElement("div");
        f.className = "form-group";
        fm.appendChild(f);

        var field = document.createElement("select");
        var op = document.createElement("select");
        var operand = document.createElement("input");

        field.name = "field" + row;
        op.name = "op" + row;
        operand.name = "operand" + row;

        //operand.className = "form-control"

        for (var i = 0; i < fieldMap.length; i++) {
            var option = document.createElement("option");
            option.text = fieldMap[i];
            option.value = valueMap[i];
            field.add(option);
        }

        for (var i = 0; i < opMap.length; i++) {
            var ooption = document.createElement("option");
            ooption.text = opMap[i];
            ooption.value = i;
            op.add(ooption);
        }


        f.appendChild(field);
        f.appendChild(op);
        f.appendChild(operand);



        /*var input = document.createElement("input");
        input.type = "button";
        input.value = "+";
        input.onclick = "append_input()";

        f.appendChild(input);*/

        /*var f = document.getElementById("query_form");
        var div = document.createElement("div");
        div.className("form-group");

        var div_field = document.createElement("div");
        var in_field = document.createElement("input");
        in_field.name = "field" + row;
        in_field.type = "text";
        in_field.className = "form-control";
        div_field.appendChild(in_field);
        var bg_field = document.createElement("div");
        bg_field.className = "input-group-btn";
        var bt_field = document.createElement("button");
        bt_field.type = "button";
        bt_field.className = "btn btn-default dropdown-toggle";
        //bt_field.name = "变量";
        bt_field.setAttribute("data-toggle", "dropdown");
        var span_field = document.createElement("span");
        span_field.className = "caret";
        bt_field.appendChild(span_field);
        var ul_field = document.createElement("ul");
        ul_field.className = "dropdown-menu";
        ul_field.setAttribute("role", "menu");
        for (var i = 0; i < fieldMap.length; i++) {
            var li = document.createElement("li");
            var a = document.createElement("a");
            a.onclick = "in_field.textContent=valueMap[" + i + "]";
            a.name = valueMap[i];
            a.id = fieldMap[i];
            li.add(a);
            ul_field.appendChild(a);
        }
        bg_field.appendChild(bt_field);
        bg_field.appendChild(ul_field);
        div_field.appendChild(bg_field);
        div.appendChild(div_field);

        f.appendChild(div);*/

        row++;
    }
</script>


<div class="row">
    <div class="col-sm-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">查询</h3>
            </div>
            <div class="panel-body" id="query_form">
                @using (Html.BeginForm("Query", "SpareOrder", FormMethod.Post))
                {
                    <input type="button" value="+" onclick="append_input()" class="btn btn-sm" />
                    <input type="submit" id="query" value="确定" class="btn btn-sm" />
                }
            </div>
        </div>
    </div>
</div>

<br />

<p>
    @Html.ActionLink("新建", "Create", "SpareOrder", null, new { @class = "btn btn-default" })
    @*@tml.ActionLink("Query", "Query")*@
</p>

<!--
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Equipments.EquipDes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Spares.SpareDes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SpareDes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Producer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Property)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Maker)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MakerNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orderman)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UseTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TotalPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Mode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderFile)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ChangeTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Changer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Creator)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Equipments.EquipDes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Spares.SpareDes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SpareDes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderValue)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Producer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Property)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Maker)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MakerNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Orderman)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UseTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Mode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderFile)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChangeTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Changer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Creator)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.OrderID }) |
            @Html.ActionLink("Details", "Details", new { id=item.OrderID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.OrderID })
        </td>
    </tr>
}

</table> -->

@using MvcContrib.UI.Grid
@using MvcContrib
@Html.Grid(Model).Sort(ViewData["model"] as GridSortOptions).Columns(column =>
        {
            column.For(p => p.SpareID).Sortable(true);
            column.For(p => p.SpareDes).Sortable(true);
            column.For(p => p.Type).Sortable(true);
            column.For(p => p.OrderValue).Sortable(true);
            column.For(p => p.Producer).Sortable(true);
            column.For(p => p.OrderNum).Sortable(true);
            column.For(p => p.Property).Sortable(true);
            column.For(p => p.EquipmentID).Sortable(true);
            column.For(p => p.Maker).Sortable(true);
            column.For(p => p.MakerNum).Sortable(true);
            column.For(p => p.Orderman).Sortable(true); 
            column.For(p => p.UseTime).Sortable(true);
            column.For(p => p.UnitPrice).Sortable(true);
            column.For(p => p.TotalPrice).Sortable(true);
            column.For(p => p.Status).Sortable(true);
            column.For(p => p.Mode).Sortable(true);
            column.For(p => p.OrderID).Sortable(true);
            column.For(p => p.ChangeTime).Sortable(true);
            column.For(p => p.Changer).Sortable(true);
            column.For(p => p.CreateTime).Sortable(true);
            column.For(p => p.Creator).Sortable(true);
            column.For(p => Html.ActionLink("编辑", "Edit", new { id = p.OrderID }));
            column.For(p => Html.ActionLink("查看", "Details", new { id = p.OrderID }));
            column.For(p => Html.ActionLink("删除", "Delete", new { id = p.OrderID }));
        }).Empty("无数据").Attributes(@width => "100%", @style => "text-align:center;border-collapse:collapse", @class => "table table-striped table-hover")
