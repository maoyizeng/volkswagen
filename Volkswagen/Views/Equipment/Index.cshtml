@model IEnumerable<Volkswagen.Models.EquipmentModels>

@{
    ViewBag.Title = "上海大众";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>设备履历</h2>

@{
    IEnumerable<SelectListItem> fields = ViewData["fields"] as IEnumerable<SelectListItem>;
    IEnumerable<SelectListItem> ops = ViewData["operations"] as IEnumerable<SelectListItem>;
}

<script type="text/javascript">
    var row = 0;
    var fieldMap = new Array(
        "设备编号",
        "设备名称",
        "负责人",
        "所在工段",
        "车间生产线",
        "点检",
        "日常保养",
        "巡检",
        "需更新否",
        "最后修改时间",
        "修改人",
        "创建时间",
        "创建人",
        "备注"
    );

    var opMap = new Array(
        "=",
        ">",
        "<",
        ">=",
        "<="
        );

    var valueMap = new Array(
    "EquipmentID",
    "EquipDes",
    "Person",
    "Section",
    "WSArea",
    "ItemInspect",
    "RegularCare",
    "Check",
    "RoutingInspect",
    "ChangeTime",
    "Changer",
    "CreateTime",
    "Creator",
    "Remark");

    function append_input() {
        
        var fm = document.getElementById("query_form");
        var f = document.createElement("div");
        f.className = "form-group";
        fm.appendChild(f);

        var field = document.createElement("select");
        var op = document.createElement("select");
        var operand = document.createElement("input");

        field.name = "field" + row;
        op.name = "op" + row;
        operand.name = "operand" + row;

        //operand.className = "form-control"

        for (var i = 0; i < fieldMap.length; i++) {
            var option = document.createElement("option");
            option.text = fieldMap[i];
            option.value = valueMap[i];
            field.add(option);
        }

        for (var i = 0; i < opMap.length; i++) {
            var ooption = document.createElement("option");
            ooption.text = opMap[i];
            ooption.value = i;
            op.add(ooption);
        }
       

        f.appendChild(field);
        f.appendChild(op);
        f.appendChild(operand);

        

        /*var input = document.createElement("input");
        input.type = "button";
        input.value = "+";
        input.onclick = "append_input()";

        f.appendChild(input);*/

        /*var f = document.getElementById("query_form");
        var div = document.createElement("div");
        div.className("form-group");
        
        var div_field = document.createElement("div");
        var in_field = document.createElement("input");
        in_field.name = "field" + row;
        in_field.type = "text";
        in_field.className = "form-control";
        div_field.appendChild(in_field);
        var bg_field = document.createElement("div");
        bg_field.className = "input-group-btn";
        var bt_field = document.createElement("button");
        bt_field.type = "button";
        bt_field.className = "btn btn-default dropdown-toggle";
        //bt_field.name = "变量";
        bt_field.setAttribute("data-toggle", "dropdown");
        var span_field = document.createElement("span");
        span_field.className = "caret";
        bt_field.appendChild(span_field);
        var ul_field = document.createElement("ul");
        ul_field.className = "dropdown-menu";
        ul_field.setAttribute("role", "menu");
        for (var i = 0; i < fieldMap.length; i++) {
            var li = document.createElement("li");
            var a = document.createElement("a");
            a.onclick = "in_field.textContent=valueMap[" + i + "]";
            a.name = valueMap[i];
            a.id = fieldMap[i];
            li.add(a);
            ul_field.appendChild(a);
        }
        bg_field.appendChild(bt_field);
        bg_field.appendChild(ul_field);
        div_field.appendChild(bg_field);
        div.appendChild(div_field);
        
        f.appendChild(div);*/

        row++;
    }
</script>


<div class="row">
<div class="col-sm-6" >
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">查询</h3>
        </div>
        <div class="panel-body" id="query_form">
            @using (Html.BeginForm("Query", "Equipment", FormMethod.Post))
            {
                <input type="button" value="+" onclick="append_input()" class="btn btn-sm" />
                <input type="submit" id="query" value="确定" class="btn btn-sm" />
            }
        </div>
    </div>
</div>
</div>

<br />

<p>
    @Html.ActionLink("新建", "Create", "Equipment", null, new { @class = "btn btn-default" })
    @*@tml.ActionLink("Query", "Query")*@
</p>
<!--
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EquipDes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Person)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Section)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WSArea)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Photo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemInspect)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegularCare)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Check)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RoutingInspect)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TPMFile)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rules)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TechnicFile)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TrainingFile)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ChangeTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Changer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Creator)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Remark)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.EquipDes)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Person)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Section)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WSArea)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Photo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ItemInspect)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RegularCare)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Check)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RoutingInspect)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TPMFile)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rules)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TechnicFile)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TrainingFile)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChangeTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Changer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Creator)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Remark)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EquipmentID }) |
            @Html.ActionLink("Details", "Details", new { id=item.EquipmentID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.EquipmentID })
        </td>
    </tr>
}
    
</table>
-->

@using MvcContrib.UI.Grid
@using MvcContrib
@Html.Grid(Model).Sort(ViewData["model"] as GridSortOptions).Columns(column =>
        {
            column.For(p => p.EquipmentID).Sortable(true);
            column.For(p => p.EquipDes).Sortable(true);
            column.For(p => p.Person).Sortable(true);
            column.For(p => p.Section).Sortable(true);
            column.For(p => p.WSArea).Sortable(true);
            column.For(p => p.Photo.IsEmpty() ? "无" : "有").Named("设备照片").Sortable(true);
            column.For(p => p.ItemInspect).Sortable(true);
            column.For(p => p.RegularCare).Sortable(true);
            column.For(p => p.Check).Sortable(true);
            column.For(p => p.RoutingInspect).Sortable(true);
            column.For(p => p.TPMFile.IsEmpty() ? "无" : "有").Named("TPM文件").Sortable(true);
            column.For(p => p.Rules.IsEmpty() ? "无" : "有").Named("操作规程").Sortable(true);
            column.For(p => p.TechnicFile.IsEmpty() ? "无" : "有").Named("技术文件").Sortable(true);
            column.For(p => p.TrainingFile.IsEmpty() ? "无" : "有").Named("培训资料").Sortable(true);
            column.For(p => p.ChangeTime).Sortable(true);
            column.For(p => p.Changer).Sortable(true);
            column.For(p => p.CreateTime).Sortable(true);
            column.For(p => p.Creator).Sortable(true);
            column.For(p => p.Remark).Sortable(true);
            column.For(p => Html.ActionLink("编辑", "Edit", new { id = p.EquipmentID }));
            column.For(p => Html.ActionLink("查看", "Details", new { id = p.EquipmentID }));
            column.For(p => Html.ActionLink("删除", "Delete", new { id = p.EquipmentID }));
        }).Empty("无数据").Attributes(@width => "100%", @style => "text-align:center;border-collapse:collapse", @class => "table table-striped table-hover")