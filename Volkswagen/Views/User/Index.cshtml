@model IEnumerable<Volkswagen.Models.UserModels>

@{
    ViewBag.Title = "上海大众";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string col, dir;
    if (ViewData["model"] == null)
    {
        col = "";
        dir = "";
    }
    else
    {
        col = (ViewData["model"] as GridSortOptions).Column;
        dir = ((ViewData["model"] as GridSortOptions).Direction == MvcContrib.Sorting.SortDirection.Ascending) ? "Asceding" : "Descending";
    }
}

<h2>人员信息</h2>

<script type="text/javascript">
    var row = 0;
    var fieldMap = new Array(
        "简称",
        "姓名",
        "工号",
        "电话",
        "手机",
        "生日",
        "进入公司时间",
        "职务",
        "政治面貌",
        "住址",
        "技能特长",
        "工作经验",
        "备注",
        "编号",
        "最后修改时间",
        "修改人",
        "创建时间",
        "创建人"
    );

    var opMap = new Array(
        "=",
        ">",
        "<",
        ">=",
        "<=",
        "<>"
        );

    var valueMap = new Array(
        "Breviary",
        "Name",
        "Number",
        "Telephone",
        "Mobile",
        "Birthday",
        "EntryDate",
        "Position",
        "PoliticalStatus",
        "Address",
        "Skill",
        "Experience",
        "Remark",
        "UserID",
        "ChangeTime",
        "Changer",
        "CreateTime",
        "Creator");

    function append_input() {

        var fm = document.getElementById("query_form");
        var f = document.createElement("div");
        f.className = "form-group";


        var field = document.createElement("select");
        var op = document.createElement("select");
        var operand = document.createElement("input");

        field.name = "field" + row;
        op.name = "op" + row;
        operand.name = "operand" + row;

        for (var i = 0; i < fieldMap.length; i++) {
            var option = document.createElement("option");
            option.text = fieldMap[i];
            option.value = valueMap[i];
            field.add(option);
        }

        for (var i = 0; i < opMap.length; i++) {
            var ooption = document.createElement("option");
            ooption.text = opMap[i];
            ooption.value = i;
            op.add(ooption);
        }


        f.appendChild(field);
        f.appendChild(op);
        f.appendChild(operand);

        fm.appendChild(f);

        row++;
    }
</script>

<div class="row">
    <div class="col-sm-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">查询</h3>
            </div>
            <div class="panel-body">
                <form action="/User/" id="query_form" method="post">
                    <input type="hidden" name="Colu" value=@col />
                    <input type="hidden" name="Direction" value=@dir />
                    <input type="button" value="+" onclick="append_input()" class="btn btn-sm" />
                    <input type="submit" id="query" value="确定" class="btn btn-sm" />
                </form>
            </div>
        </div>
    </div>
</div>

<br />
<form action="/Equipment/" id="grid_form" method="post">

    <p>
        @Html.ActionLink("新建", "Create", "File", null, new { @class = "btn btn-default" })
        @Html.ActionLink("导出", "ExportExcel", "File", null, new { @class = "btn btn-default" })
    </p>
    <!--
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Breviary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Telephone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mobile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Birthday)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EntryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Position)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PoliticalStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Skill)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Experience)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Remark)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChangeTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Changer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Creator)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Breviary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Telephone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mobile)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birthday)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EntryDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PoliticalStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Skill)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Experience)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remark)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Image)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChangeTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Changer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Creator)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.UserID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.UserID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.UserID })
                </td>
            </tr>
        }

    </table>
    -->
    @Html.ActionLink("全选", "Create", "User", null, new { @class = "btn btn-default" })
    @Html.ActionLink("批量修改", "EditMultiple", "User", null, new { @class = "btn btn-default" })
    @Html.ActionLink("批量删除", "DeleteMultiple", "User", null, new { @class = "btn btn-default" })
    <p>

    </p>
    @using MvcContrib.UI.Grid

    @using MvcContrib


    @Html.Grid(Model).Sort(ViewData["model"] as GridSortOptions).Columns(column =>
            {
                column.For(p => Html.CheckBox("Checked" + p.UserID)).Sortable(false);
                column.For(p => p.Breviary).Sortable(true);
                column.For(p => p.Name).Sortable(true);
                column.For(p => p.Number).Sortable(true);
                column.For(p => p.Telephone).Sortable(true);
                column.For(p => p.Mobile).Sortable(true);
                column.For(p => p.Birthday).Sortable(true);
                column.For(p => p.EntryDate).Sortable(true);
                column.For(p => p.Position).Sortable(true);
                column.For(p => p.PoliticalStatus).Sortable(true);
                column.For(p => p.Address).Sortable(true);
                column.For(p => p.Skill).Sortable(true);
                column.For(p => p.Experience).Sortable(true);
                column.For(p => p.Remark).Sortable(true);
                //column.For(p => p.Image).Sortable(true);
                column.For(p => p.UserID).Sortable(true);
                column.For(p => p.ChangeTime).Sortable(true);
                column.For(p => p.Changer).Sortable(true);
                column.For(p => p.CreateTime).Sortable(true);
                column.For(p => p.Creator).Sortable(true);
                column.For(p => Html.ActionLink("编辑", "Edit", new { id = p.UserID }));
                column.For(p => Html.ActionLink("查看", "Details", new { id = p.UserID }));
                column.For(p => Html.ActionLink("删除", "Delete", new { id = p.UserID }));
            }).Empty("无数据").Attributes(@width => "100%", @style => "text-align:center;border-collapse:collapse", @class => "table table-striped table-hover")

</form>