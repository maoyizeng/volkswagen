@model IEnumerabIPaginationle<Volkswagen.Models.ArSpareModels>

@{
    ViewBag.Title = "历史记录 - 备件库存";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string col, dir;
    if (ViewData["model"] == null)
    {
        col = "";
        dir = "";
    }
    else
    {
        col = (ViewData["model"] as GridSortOptions).Column;
        dir = ((ViewData["model"] as GridSortOptions).Direction == MvcContrib.Sorting.SortDirection.Ascending) ? "Asceding" : "Descending";
    }
}

<h3>历史记录 - 备件库存</h3>

<script type="text/javascript">
    var row = 0;
    var fieldMap = new Array(
        "设备物流编号",
        "备件名称",
        "备件型号",
        "仓位号",
        "当前库存",
        "安全库存",
        "东昌最小库存",
        "东昌最大库存",
        "所属设备",
        "设备编号",
        "设备供货商",
        "订货号",
        "设备关键属性",
        "最后修改时间",
        "修改人",
        "创建时间",
        "创建人",
        "备注",
        "操作类型",
        "操作时间"
    );

    var opMap = new Array(
        "=",
        ">",
        "<",
        ">=",
        "<=",
        "<>",
        "包含"
        );

    var valueMap = new Array(
        "SpareID",
        "SpareDes",
        "Type",
        "Mark",
        "PresentValue",
        "SafeValue",
        "DCMinValue",
        "DCMaxValue",
        "Property",
        "EquipmentID",
        "Producer",
        "OrderNumber",
        "KeyPart",
        "ChangeTime",
        "Changer",
        "CreateTime",
        "Creator",
        "Remark",
        "Operator",
        "OperateTime");

    function append_input() {

        var fm = document.getElementById("query_panel");
        var f = document.createElement("div");
        f.className = "form-group";


        var field = document.createElement("select");
        var op = document.createElement("select");
        var operand = document.createElement("input");

        f.name = "fgroup" + row;
        field.name = "field" + row;
        op.name = "op" + row;
        operand.name = "operand" + row;

        //operand.className = "form-control"

        for (var i = 0; i < fieldMap.length; i++) {
            var option = document.createElement("option");
            option.text = fieldMap[i];
            option.value = valueMap[i];
            field.add(option);
        }

        for (var i = 0; i < opMap.length; i++) {
            var ooption = document.createElement("option");
            ooption.text = opMap[i];
            ooption.value = i;
            op.add(ooption);
        }

        var cancel = document.createElement("button");
        cancel.type = "button";
        cancel.className = "btn btn-default btn-xs";
        var cancelx = document.createElement("span");
        cancelx.className = "glyphicon glyphicon-remove"
        cancel.onclick = function () {
            this.parentElement.hidden = true;
            this.parentElement.getElementsByTagName("input").value = null;
        };
        cancel.appendChild(cancelx);

        f.appendChild(field);
        f.appendChild(op);
        f.appendChild(operand);
        f.appendChild(cancel);

        fm.appendChild(f);

        row++;
    }

    function add_input(a, b, c, r) {
        var field = document.getElementsByName("field" + r)[0];
        var op = document.getElementsByName("op" + r)[0];
        var operand = document.getElementById("operand" + r);
        for (var i = 0; i < field.options.length; i++) {
            if (field.options[i].value == a) {
                field.options[i].selected = true;
                break;
            }
        }
        for (var i = 0; i < op.options.length; i++) {
            if (op.options[i].value == b) {
                op.options[i].selected = true;
                break;
            }
        }
        operand.value = c;
        if (operand.value == "") {
            operand.parentElement.hidden = true;
        }
    }

    function select_all() {
        var inputs = document.getElementById("query_form").getElementsByTagName("input");
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == "checkbox") {
                inputs[i].checked = true;
            }
        }
    }
    function toggle_all() {
        var inputs = document.getElementById("query_form").getElementsByTagName("input");
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == "checkbox") {
                inputs[i].checked = !inputs[i].checked;
            }
        }
    }
</script>


<form action="/ArSpare/" id="query_form" method="post">
    <div class="row">
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">查询</h3>
                </div>
                <div id="query_panel" class="panel-body">
                    <input type="hidden" name="Colu" value=@col />
                    <input type="hidden" name="Direction" value=@dir />
                    <input type="button" value="+" onclick="append_input()" class="btn btn-sm" />
                    <input type="submit" id="query" value="确定" class="btn btn-sm" />
                    @{
                        int r = 0;
                        while (true)
                        {
                            string field = ViewData["field" + r] as string;
                            string op = ViewData["op" + r] as string;
                            string operand = ViewData["operand" + r] as string;
                            if (string.IsNullOrEmpty(field))
                            {
                                break;
                            }

                            <script>
                                append_input();
                                add_input('@field' , '@op' , '@operand' , '@r' );
                            </script>
                            r++;
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <br />

    <p>
        @Html.ActionLink("导出", "ExportExcel", "ArSpare", null, new { @class = "btn btn-default" })
    </p>

    <div class="btn-group">
        <input type="button" id="select_button" value="全选" onclick="select_all()" class="btn btn-default" />
        <input type="button" id="select_button" value="反选" onclick="toggle_all()" class="btn btn-default" />
    </div>
    @Html.ActionLink("批量删除", "DeleteMultiple", "ArSpare", null, new { @class = "btn btn-default" })

    @using MvcContrib.UI.Grid
    @using MvcContrib.UI.Pager
    @using MvcContrib.Pagination
    @using MvcContrib
    @Html.Grid(Model).Sort(ViewData["model"] as GridSortOptions).Columns(column =>
{
    column.For(p => Html.CheckBox("Checked" + p.SpareID + p.OperateTime.ToBinary())).Sortable(false);
    column.For(p => p.SpareID).Sortable(true);
    column.For(p => p.SpareDes).Sortable(true);
    column.For(p => p.Type).Sortable(true);
    column.For(p => p.Picture1.IsEmpty() ? "无" : "有").Named("图片1").Sortable(true);
    column.For(p => p.Picture2.IsEmpty() ? "无" : "有").Named("图片2").Sortable(true);
    column.For(p => p.Mark).Sortable(true);
    column.For(p => p.PresentValue).Sortable(true);
    column.For(p => p.SafeValue).Sortable(true);
    column.For(p => p.DCMinValue).Sortable(true);
    column.For(p => p.DCMaxValue).Sortable(true);
    column.For(p => p.Property).Sortable(true);
    column.For(p => p.EquipmentID).Sortable(true);
    column.For(p => p.Producer).Sortable(true);
    column.For(p => p.OrderNumber).Sortable(true);
    column.For(p => p.KeyPart).Sortable(true);
    column.For(p => p.ChangeTime).Sortable(true);
    column.For(p => p.Changer).Sortable(true);
    column.For(p => p.CreateTime).Sortable(true);
    column.For(p => p.Creator).Sortable(true);
    column.For(p => p.Remark).Sortable(true);
    column.For(p => p.Operator).Sortable(true);
    column.For(p => p.OperateTime).Sortable(true);
    column.For(p => Html.ActionLink("查看", "Details", new { id = p.SpareID, op = p.Operator, opt = p.OperateTime.ToBinary() }));
    column.For(p => Html.ActionLink("删除", "Delete", new { id = p.SpareID, op = p.Operator, opt = p.OperateTime.ToBinary() }));
}).Empty("无数据").Attributes(@width => "100%", @style => "text-align:center;border-collapse:collapse;white-space:nowrap;overflow:hidden;text-overflow:ellipsis", @class => "table table-striped table-hover")

@Html.Pager(Model).First(" 首页 ").Next(" 下一页 ").Previous(" 上一页 ").Last(" 末页 ").Format("共{2}项, 当前{0}-{1} |")
</form>
