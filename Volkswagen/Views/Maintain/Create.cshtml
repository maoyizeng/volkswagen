@model Volkswagen.Models.MaintainModels

@{
    ViewBag.Title = "新建设备维护";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>设备维护及状态跟踪 - 新建</h3>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <!--<h4>MaintainModels</h4>-->
        <hr />
        @Html.ValidationSummary(true)

        <!--<div class="form-group">
            @Html.LabelFor(model => model.MaintainId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.MaintainId, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaintainId)
            </div>
        </div>-->

        <div class="form-group">
            @Html.LabelFor(model => model.EquipmentID, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.EquipmentID, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EquipmentID)
            </div>
            @Html.LabelFor(model => model.EquipDes, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.EquipDes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EquipDes)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Line, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("Line", new SelectList(Enum.GetValues(typeof(Volkswagen.Models.EquipmentModels.WSNames))), String.Empty)
                @Html.ValidationMessageFor(model => model.Line)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MType, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.MType, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MPart, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.MPart, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MPart)
            </div>
            @Html.LabelFor(model => model.Content, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Content)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Period, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Period, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Period)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MStartTime, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.MStartTime, new { @class = "form-control", type = "datetime-local"})
                @Html.ValidationMessageFor(model => model.MStartTime)
            </div>
            @Html.LabelFor(model => model.MEndTime, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.MEndTime, new { @class = "form-control", type = "datetime-local" })
                @Html.ValidationMessageFor(model => model.MEndTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResponseClass, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("ResponseClass", new SelectList(Enum.GetValues(typeof(Volkswagen.Models.RepairModels.ClassType))), String.Empty)
                @Html.ValidationMessageFor(model => model.ResponseClass)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.CheckStatus, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CheckStatus)
            </div>
            @Html.LabelFor(model => model.CheckDetail, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextAreaFor(model => model.CheckDetail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CheckDetail)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EquipStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.EquipStatus, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EquipStatus)
            </div>
            @Html.LabelFor(model => model.EquipDetail, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextAreaFor(model => model.EquipDetail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EquipDetail)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckerType, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.CheckerType, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CheckerType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Checker, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Checker, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Checker)
            </div>
            @Html.LabelFor(model => model.CheckTime, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.CheckTime, new { @class = "form-control", type = "datetime-local" })
                @Html.ValidationMessageFor(model => model.CheckTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Problem, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextAreaFor(model => model.Problem, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Problem)
            </div>
            @Html.LabelFor(model => model.ProblemStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.ProblemStatus, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProblemStatus)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mark, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Mark, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Mark)
            </div>
            @Html.LabelFor(model => model.Grade, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Grade, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Grade)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.CheckNum, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.CheckNum, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CheckNum)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-default" data-toggle="modal" data-target="#myModal">
                    新建
                </button>

                <!-- Modal -->
                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                <h4 class="modal-title" id="myModalLabel">新建确认</h4>
                            </div>
                            <div class="modal-body">
                                是否新建该条记录?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                                <input type="submit" value="新建" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回列表", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
